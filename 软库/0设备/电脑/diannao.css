/* styles.css */
/* 设置页面的全局样式 */
body {
    font-family: 'Arial', sans-serif; /* 设置页面的字体为 Arial，默认 sans-serif。这样保证页面的字体风格统一。 */
    background-size: cover; /* 背景图片会覆盖整个页面，保持页面的背景美观。 */
    margin: 0; /* 去掉浏览器的默认外边距，避免出现不必要的白边。 */
    padding: 0; /* 去掉默认内边距，确保内容紧贴页面边缘。 */
    display: flex; /* 使用 Flexbox 布局，使页面内容容易居中和排列。 */
    flex-direction: column; /* Flexbox 布局方向为列，使内容从上到下排列。 */
    align-items: center; /* 内容在水平方向上居中对齐。 */
    justify-content: flex-start; /* 将内容从顶部开始排列，而不是完全居中，给顶部留出更多空间。 */
    height: 100vh; /* 页面高度设置为视口高度，使内容充满整个页面。 */
    overflow: hidden; /* 禁止滚动条，保持页面简洁。 */
    position: relative; /* 设置为相对定位，以便后续使用伪元素覆盖页面。 */
    transition: background-color 0.5s ease-in-out, color 0.5s ease-in-out; /* 背景颜色和文字颜色的渐变效果，提升页面的交互性。 */
    padding-top: 50px; /* 增加顶部的距离，确保页面内容与浏览器上边距之间有足够的间距。 */
}

/* 添加渐变蒙版效果，使页面看起来更加柔和且富有层次感 */
body::before {
    content: ''; /* 创建一个伪元素用于样式效果，不显示具体内容。 */
    position: absolute; /* 使伪元素覆盖整个页面。 */
    top: 0; /* 从页面顶部开始覆盖。 */
    left: 0; /* 从页面左边开始覆盖。 */
    right: 0; /* 覆盖到页面右边。 */
    bottom: 0; /* 覆盖到页面底部。 */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2)); /* 从上到下的渐变效果，顶部较透明，底部稍深。 */
    z-index: -1; /* 保证伪元素位于所有内容的后面。 */
}

/* 软件库大容器的样式 */
.软件库1级容器class {
    width: 90%; /* 设置容器宽度为页面宽度的90%，确保内容在大屏幕上也有一定留白。 */
    max-width: 1140px; /* 最大宽度为1140px，防止容器在大屏幕上过宽，保持用户体验。 */
    height: 480px; /* 高度固定为500px，可以根据需要调整。 */
    padding: 25px; /* 容器内部的边距，保持内容与边界的距离。 */
    background: rgba(255, 255, 255, 0.5); /* 半透明的白色背景，使内容和背景有明显区分。 */
    border-radius: 20px; /* 设置20px的圆角，使容器看起来更加柔和。 */
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2); /* 添加阴影，使容器看起来有立体感。 */
    display: flex; /* 使用 Flexbox 布局。 */
    flex-direction: column; /* 内容纵向排列。 */
    box-sizing: border-box; /* 包含内边距和边框在内进行大小计算，避免尺寸不一致。 */
    overflow: hidden; /* 隐藏可能超出的内容。 */
    position: relative; /* 设置相对定位，以便子元素的绝对定位操作。 */
    transition: transform 0.5s ease, opacity 0.5s ease, background-color 0.5s ease-in-out; /* 添加过渡效果，使交互更加平滑。 */
    margin-top: 50px; /* 增加顶部的外边距，使大容器与顶部有更大的间距。 */
}

/* 小块容器的样式（包含软件块的容器） */
.软件库2级容器class {
    display: flex; /* 使用 Flexbox 布局方便内部软件块的排列。 */
    flex-wrap: wrap; /* 如果内容超出一行，自动换行显示。 */
    justify-content: space-around; /* 子元素在水平方向均匀分布，保持美观。 */
    align-content: space-around; /* 多行内容在垂直方向均匀分布。 */
    gap: 20px 10px; /* 设置子元素之间的间距，水平20px，垂直10px。 */
    flex-grow: 1; /* 容器占据父容器的剩余空间。 */
    transition: background-color 0.5s ease-in-out; /* 背景颜色的平滑过渡，提升视觉效果。 */
}

/* 单个软件库块的样式 */
.软件库块class {
    width: 200px; /* 固定宽度为200px，保持统一。 */
    height:95px; /* 固定高度为100px，保持统一。 */
    background: rgba(0, 0, 0, 0.4); /* 黑色半透明背景，增强对比度。 */
    border-radius: 30px; /* 圆角设置为30px，使块看起来更加柔和。 */
    box-shadow: 0 4px 10px rgba(255, 255, 255, 0.15); /* 添加轻微的阴影，使其看起来立体。 */
    display: flex; /* 使用 Flexbox 布局，以便内容居中。 */
    align-items: center; /* 垂直方向居中对齐内容。 */
    justify-content: center; /* 水平方向居中对齐内容。 */
    text-align: center; /* 文字水平居中。 */
    flex-direction: column; /* 内容纵向排列。 */
    cursor: pointer; /* 鼠标悬停时显示手指形状，提示可点击。 */
    transition: transform 0.4s ease, box-shadow 0.4s ease, background-color 0.5s ease-in-out; /* 添加平滑的悬停效果。 */
    text-shadow: 0 20 40px rgba(255, 255, 255, 1); /* 文字的发光效果，增加可读性。 */
}

/* 软件库块的悬停效果样式 */
.软件库块class:hover {
    transform: translateY(-10px); /* 鼠标悬停时，块向上移动10px，增加交互感。 */
    text-shadow: 0 0 10px rgb(255, 217, 0), 0 0 20px rgba(255, 215, 0, 0.8); /* 文字增加金色发光效果，提升视觉效果。 */
    box-shadow: 0 0 40px rgba(255, 215, 0, 0.8), 0 0 60px rgba(255, 215, 0, 0.6); /* 块增加金光效果，使其更加突出。 */
}

/* 软件库块中文字样式的定义 */
.文字class {
    max-width: 14ch; /* 限制文字最大字符长度为14个字符，避免文字过长。 */
    overflow-wrap: break-word; /* 文字超出长度时自动换行。 */
    font-size: 16px; /* 设置文字大小，保持清晰可读。 */
    font-weight: 600; /* 字体加粗，增强视觉效果。 */
    color: rgba(255, 255, 255, 0.8); /* 字体颜色设为半透明白色。 */
    text-align: center; /* 文字水平居中对齐。 */
    text-shadow: 0 10 20px rgba(255, 255, 255, 0.8); /* 文字发光效果，增加可读性。 */
}

/* 设置分页控件的样式 */
.pagination {
    display: flex; /* 使用 Flexbox 布局，使分页控件方便居中显示。 */
    justify-content: center; /* 分页按钮水平居中对齐。 */
    align-items: center; /* 垂直方向居中对齐。 */
    margin-top: 20px; /* 分页控件与主要内容之间的距离。 */
    padding: 10px; /* 增加分页区域的内边距，使其更加醒目。 */
    background-color: rgba(255, 255, 255, 0.3); /* 设置半透明背景色，提高分页区域的可见性。 */
    border-radius: 10px; /* 设置圆角，使分页控件看起来更加柔和。 */
    transition: background-color 0.5s ease-in-out; /* 背景颜色渐变效果。 */
    max-width: 1000px; /* 限制分页容器的最大宽度。 */
    overflow: hidden; /* 隐藏超出容器的按钮部分，保持布局整齐。 */
    position: relative; /* 设置相对定位，以便子元素的滑动效果。 */
}

/* 分页按钮的样式 */
.pagination-button {
    width: 50px; /* 所有按钮宽度一致，保持整齐。 */
    height: 50px; /* 所有按钮高度一致，保持整齐。 */
    line-height: 50px; /* 按钮内文字垂直居中显示。 */
    text-align: center; /* 按钮内文字水平居中显示。 */
    font-size: 15px; /* 字体大小一致，确保可读性。 */
    border: none; /* 去掉默认边框。 */
    background-color: rgba(50, 50, 50, 0.5); /* 按钮背景设为半透明深灰色。 */
    color: white; /* 按钮文字颜色设为白色，保持对比度。 */
    margin: 0 8px; /* 按钮之间设置水平间距，使其分开。 */
    cursor: pointer; /* 鼠标悬停时显示手指形状，提示可点击。 */
    transition: background 0.3s, transform 0.3s, color 0.5s ease-in-out; /* 悬停时的渐变效果，使交互更加平滑。 */
    border-radius: 15px; /* 添加圆角，使按钮看起来更加柔和。 */
}

.pagination-button:hover {
    background-color: rgba(255, 242, 0, 0.6); /* 鼠标悬停时背景颜色加深，突出按钮。 */
    transform: scale(1.1); /* 鼠标悬停时按钮放大，增加视觉反馈。 */
    color: rgb(255, 255, 255); /* 悬停时文字颜色为白色，使其清晰。 */
}

/* 分页按钮禁用状态的样式（如在第一页或最后一页） */
.pagination-button:disabled {
    background-color: #ccc; /* 禁用状态下按钮背景设为浅灰色，提示不可用。 */
    cursor: not-allowed; /* 鼠标悬停时显示禁用符号，提示不可点击。 */
    opacity: 0.6; /* 降低透明度，使禁用按钮显得不那么醒目。 */
}

/* 当前页按钮的样式 */
.pagination-button.current-page {
    background-color: rgba(255, 215, 0, 0.9); /* 当前页按钮设为醒目的金黄色背景，突出显示。 */
    font-weight: bold; /* 字体加粗，使其更加显眼。 */
    cursor: default; /* 当前页按钮不可点击，因此设置为默认鼠标指针。 */
    color: #fff; /* 当前页按钮文字颜色设为白色。 */
    border-radius: 15px; /* 保持圆角样式。 */
}

/* 分页按钮的滑动效果 */
.pagination-scroll {
    display: flex;
    transition: transform 0.5s ease; /* 添加按钮滑动的过渡效果，提升视觉体验。 */
}

/* 页面切换动画：从左侧滑入 */
.slide-in-left {
    animation: slideInLeft 0.5s ease forwards; /* 从页面左侧滑入的动画效果，持续0.5秒。 */
}

/* 页面切换动画：从右侧滑入 */
.slide-in-right {
    animation: slideInRight 0.5s ease forwards; /* 从页面右侧滑入的动画效果，持续0.5秒。 */
}

/* 页面切换动画：渐入渐出效果 */
.fade-in-out {
    animation: fadeInOut 0.5s ease; /* 渐入渐出的动画效果，持续0.5秒。 */
}

/* 定义从左侧滑入的动画效果 */
@keyframes slideInLeft {
    from { transform: translateX(100%); opacity: 0; } /* 动画开始时，从页面右侧滑入，完全透明。 */
    to { transform: translateX(0); opacity: 1; } /* 动画结束时，滑入到正常位置并变为不透明。 */
}

/* 定义从右侧滑入的动画效果 */
@keyframes slideInRight {
    from { transform: translateX(-100%); opacity: 0; } /* 动画开始时，从页面左侧滑入，完全透明。 */
    to { transform: translateX(0); opacity: 1; } /* 动画结束时，滑入到正常位置并变为不透明。 */
}

/* 定义渐入渐出的动画效果 */
@keyframes fadeInOut {
    from { opacity: 0; } /* 动画开始时，完全透明。 */
    to { opacity: 1; } /* 动画结束时，完全不透明。 */
}

/* 确保“首页”和“末页”按钮与其他分页按钮风格一致 */
.pagination-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    border-radius: 15px; /* 为分页容器添加圆角，使整体看起来更加美观。 */
}
